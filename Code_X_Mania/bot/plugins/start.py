# (c) Code-X-Mania

from Code_X_Mania.bot import StreamBot
from Code_X_Mania.vars import Var
from Code_X_Mania.utils.human_readable import humanbytes
from Code_X_Mania.utils.database import Database
from pyrogram import filters
from pyrogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from pyrogram.errors import UserNotParticipant
db = Database(Var.DATABASE_URL, Var.SESSION_NAME)
from pyshorteners import Shortener

def get_shortlink(url):
   shortlink = False 
   try:
      shortlink = Shortener().dagd.short(url)
   except Exception as err:
       print(err)
       pass
   return shortlink

START_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('A ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close')
        ]]
    )

HELP_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥è·¥ç·¥á', callback_data='home'),
        InlineKeyboardButton('A ô·¥è·¥ú·¥õ', callback_data='about'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close')
        ]]
    )

ABOUT_BUTTONS = InlineKeyboardMarkup(
        [[
        InlineKeyboardButton('H·¥è·¥ç·¥á', callback_data='home'),
        InlineKeyboardButton('H·¥á ü·¥ò', callback_data='help'),
        InlineKeyboardButton('C ü·¥ès·¥á', callback_data='close')
        ]]
    )

@StreamBot.on_message(filters.command('start') & filters.private & ~filters.edited)
async def start(b, m):
    if not await db.is_user_exist(m.from_user.id):
        await db.add_user(m.from_user.id)
        await b.send_message(
            Var.BIN_CHANNEL,
            f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö:** \n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{m.from_user.first_name}](tg://user?id={m.from_user.id}) __S·¥õ·¥Ä Ä·¥õ·¥á·¥Ö Y·¥è·¥ú Ä B·¥è·¥õ !!__"
        )
    usr_cmd = m.text.split("_")[-1]
    if usr_cmd == "/start":
        if Var.UPDATES_CHANNEL != "None":
            try:
                user = await b.get_chat_member(Var.UPDATES_CHANNEL, m.chat.id)
                if user.status == "kicked":
                    await b.send_message(
                        chat_id=m.chat.id,
                        text="__Sorry! You Are Banned From Using Me. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä__\n\n **@TeleRoid14**",
                        parse_mode="markdown",
                        disable_web_page_preview=True
                    )
                    return
            except UserNotParticipant:
                await b.send_message(
                    chat_id=m.chat.id,
                    text="<i>JOIN @HindiWebNetwork CHANNEL TO USE ME üîê</i>",
                    reply_markup=InlineKeyboardMarkup(
                        [
                            [
                                InlineKeyboardButton("JOINüîì", url=f"https://t.me/{Var.UPDATES_CHANNEL}")
                            ]
                        ]
                    ),
                    parse_mode="HTML"
                )
                return
            except Exception:
                await b.send_message(
                    chat_id=m.chat.id,
                    text="<i>Something Went Wrong</i> <b> <a href='http://t.me/TeleRoid14'>[Support Group]</a></b>",
                    parse_mode="HTML",
                    disable_web_page_preview=True)
                return
        await m.reply_text(
            text=START_TEXT.format(m.from_user.mention),
            parse_mode="HTML",
            disable_web_page_preview=True,
            reply_markup=START_BUTTONS
              )                                                                                                                                                              
                                                                            
    else:
        if Var.UPDATES_CHANNEL != "None":
            try:
                user = await b.get_chat_member(Var.UPDATES_CHANNEL, m.chat.id)
                if user.status == "kicked":
                    await b.send_message(
                        chat_id=m.chat.id,
                        text="**S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. Q·¥ú…™·¥Ñ·¥ã ü è ·¥Ñ·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ** @adarsh_status_bot",
                        parse_mode="markdown",
                        disable_web_page_preview=True
                    )
                    return
            except UserNotParticipant:
                await b.send_message(
                    chat_id=m.chat.id,
                    text="**P ü·¥á·¥Äs·¥á J·¥è…™…¥  U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s B·¥è·¥õ**!\n\n**D·¥ú·¥á ·¥õ·¥è O·¥†·¥á Ä ü·¥è·¥Ä·¥Ö, O…¥ ü è C ú·¥Ä…¥…¥·¥á ü S·¥ú ôs·¥Ñ Ä…™ ô·¥á Äs ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú·¥á B·¥è·¥õ**!",
                    reply_markup=InlineKeyboardMarkup(
                        [
                            [
                                InlineKeyboardButton("ü§ñ Join Updates Channel", url=f"https://t.me/{Var.UPDATES_CHANNEL}")
                            ],
                            [
                                InlineKeyboardButton("üîÑ Refresh / Try Again",
                                                     url=f"https://t.me/{Var.APP_NAME}.herokuapp.com/{usr_cmd}") # Chnage ur app name
                            ]
                        ]
                    ),
                    parse_mode="markdown"
                )
                return
            except Exception:
                await b.send_message(
                    chat_id=m.chat.id,
                    text="**S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ W Ä·¥è…¥…¢. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥ç·¥á** [@TeleRoid14](https://t.me/TeleRoid14).",
                    parse_mode="markdown",
                    disable_web_page_preview=True)
                return

        get_msg = await b.get_messages(chat_id=Var.BIN_CHANNEL, message_ids=int(usr_cmd))

        file_size = None
        if get_msg.video:
            file_size = f"{humanbytes(get_msg.video.file_size)}"
        elif get_msg.document:
            file_size = f"{humanbytes(get_msg.document.file_size)}"
        elif get_msg.audio:
            file_size = f"{humanbytes(get_msg.audio.file_size)}"

        file_name = None
        if get_msg.video:
            file_name = f"{get_msg.video.file_name}"
        elif get_msg.document:
            file_name = f"{get_msg.document.file_name}"
        elif get_msg.audio:
            file_name = f"{get_msg.audio.file_name}"

        stream_link = Var.URL + 'watch/' + str(log_msg.message_id)
        shortlink = get_shortlink(stream_link)
        if shortlink:
            stream_link = shortlink
        online_link = Var.URL + 'download/' + str(log_msg.message_id)
        shortlinka = get_shortlink(online_link)
        if shortlinka:
            online_link = shortlinka

        msg_text ="""
<i><u>ùó¨ùóºùòÇùóø ùóüùó∂ùóªùó∏ ùóöùó≤ùóªùó≤ùóøùóÆùòÅùó≤ùó± !</u></i>

<b>üìÇ F…™ ü·¥á …¥·¥Ä·¥ç·¥á :</b> <i>{}</i>

<b>üóÇ F…™ ü·¥á Íú±…™·¥¢·¥á :</b> <i>{}</i>

<b>üì• D·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö :</b> <i>{}</i>

<b>üéû Watch:</b> <i>{}</i>

<b>üö∏ N·¥è·¥õ·¥á : LINK WON'T EXPIRE TILL I DELETE IN DATABASE</b>

"""

        await m.reply_text(
            text=msg_text.format(file_name, file_size, online_link, stream_link),
            parse_mode="HTML",
            reply_markup=InlineKeyboardMarkup([[InlineKeyboardButton("üéû STREAM", url=stream_link), #Stream Link
                                                InlineKeyboardButton('D·¥è·¥°…¥ ü·¥è·¥Ä·¥Öüì•', url=online_link)]]) #Download Link
        )


@StreamBot.on_message(filters.private & filters.command(["about"]))
async def start(bot, update):
    await update.reply_text(
        text=ABOUT_TEXT.format(update.from_user.mention),
        disable_web_page_preview=True,
        reply_markup=ABOUT_BUTTONS
    )


@StreamBot.on_message(filters.command('help') & filters.private & ~filters.edited)
async def help_handler(bot, message):
    if not await db.is_user_exist(message.from_user.id):
        await db.add_user(message.from_user.id)
        await bot.send_message(
            Var.BIN_CHANNEL,
            f"**N·¥á·¥° Us·¥á Ä J·¥è…™…¥·¥á·¥Ö **\n\n__M è N·¥á·¥° F Ä…™·¥á…¥·¥Ö__ [{message.from_user.first_name}](tg://user?id={message.from_user.id}) __Started Your Bot !!__"
        )
    if Var.UPDATES_CHANNEL is not None:
        try:
            user = await bot.get_chat_member(Var.UPDATES_CHANNEL, message.chat.id)
            if user.status == "kicked":
                await bot.send_message(
                    chat_id=message.chat.id,
                    text="<i>S·¥è Ä Ä è S…™ Ä, Y·¥è·¥ú ·¥Ä Ä·¥á B·¥Ä…¥…¥·¥á·¥Ö ·¥õ·¥è ·¥ús·¥á ·¥ç·¥á. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥õ ú·¥á D·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä </i>",
                    parse_mode="HTML",
                    disable_web_page_preview=True
                )
                return
        except UserNotParticipant:
            await bot.send_message(
                chat_id=message.chat.id,
                text="**P ü·¥á·¥Äs·¥á J·¥è…™…¥ M è U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü ·¥õ·¥è ·¥ús·¥á ·¥õ ú…™s B·¥è·¥õ!**\n\n__D·¥ú·¥á ·¥õ·¥è O·¥†·¥á Ä ü·¥è·¥Ä·¥Ö, O…¥ ü è C ú·¥Ä…¥…¥·¥á ü S·¥ú ôs·¥Ñ Ä…™ ô·¥á Äs ·¥Ñ·¥Ä…¥ ·¥ús·¥á ·¥õ ú·¥á B·¥è·¥õ!__",
                reply_markup=InlineKeyboardMarkup(
                    [[
                        InlineKeyboardButton("ü§ñ J·¥è…™…¥ U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü", url=f"https://t.me/{Var.UPDATES_CHANNEL}")
                        ]]
                ),
                parse_mode="markdown"
            )
            return
        except Exception:
            await bot.send_message(
                chat_id=message.chat.id,
                text="__S·¥è·¥ç·¥á·¥õ ú…™…¥…¢ ·¥°·¥á…¥·¥õ W Ä·¥è…¥…¢. C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥ç·¥á__ [A·¥†…™s ú·¥ã·¥Ä Ä P·¥Ä·¥õ…™ ü](https://t.me/Avishkarpatil).",
                parse_mode="markdown",
                disable_web_page_preview=True)
            return
    await message.reply_text(
        text=HELP_TEXT,
        parse_mode="HTML",
        disable_web_page_preview=True,
        reply_markup=HELP_BUTTONS
        )

@StreamBot.on_callback_query()
async def cb_data(bot, update):
    if update.data == "home":
        await update.message.edit_text(
            text=START_TEXT.format(update.from_user.mention),
            disable_web_page_preview=True,
            reply_markup=START_BUTTONS
        )
    elif update.data == "help":
        await update.message.edit_text(
            text=HELP_TEXT,
            disable_web_page_preview=True,
            reply_markup=HELP_BUTTONS
        )
    elif update.data == "about":
        await update.message.edit_text(
            text=ABOUT_TEXT,
            disable_web_page_preview=True,
            reply_markup=ABOUT_BUTTONS
        )
    else:
        await update.message.delete()


START_TEXT = """
<i>üëã H·¥á è,</i>{}\n
<i>I'·¥ç T·¥á ü·¥á…¢ Ä·¥Ä·¥ç F…™ ü·¥ás S·¥õ Ä·¥á·¥Ä·¥ç…™…¥…¢ B·¥è·¥õ ·¥Äs ·¥°·¥á ü ü D…™ Ä·¥á·¥Ñ·¥õ L…™…¥·¥ãs G·¥á…¥·¥á Ä·¥Ä·¥õ·¥á</i>\n
<i>C ü…™·¥Ñ·¥ã ·¥è…¥ H·¥á ü·¥ò ·¥õ·¥è …¢·¥á·¥õ ·¥ç·¥è Ä·¥á …™…¥“ì·¥è Ä·¥ç·¥Ä·¥õ…™·¥è…¥</i>\n
<i><u>ùó™ùóîùó•ùó°ùóúùó°ùóö üö∏</u></i>
<b>üîû P Ä·¥è…¥ ·¥Ñ·¥è…¥·¥õ·¥á…¥·¥õÍú±  ü·¥á·¥Ä·¥ÖÍú± ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ô·¥Ä…¥  è·¥è·¥ú.</b>\n\n
<i><b>üçÉ B·¥è·¥õ M·¥Ä…™…¥·¥õ·¥Ä…™…¥·¥á·¥Ö B è :</b>@HelpLessBoi</i>"""

HELP_TEXT = """
<i>- S·¥á…¥·¥Ö ·¥ç·¥á ·¥Ä…¥ è Íú∞…™ ü·¥á (·¥è Ä) ·¥ç·¥á·¥Ö…™·¥Ä Íú∞ Ä·¥è·¥ç ·¥õ·¥á ü·¥á…¢ Ä·¥Ä·¥ç.</i>
<i>- I ·¥°…™ ü ü ·¥ò Ä·¥è·¥†…™·¥Ö·¥á ·¥áx·¥õ·¥á Ä…¥·¥Ä ü ·¥Ö…™ Ä·¥á·¥Ñ·¥õ ·¥Ö·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö  ü…™…¥·¥ã !.</i>
<i>- A·¥Ö·¥Ö M·¥á …™…¥  è·¥è·¥ú Ä C ú·¥Ä…¥…¥·¥á ü F·¥è Ä D…™ Ä·¥á·¥Ñ·¥õ D·¥è·¥°…¥ ü·¥è·¥Ä·¥Ö L…™…¥·¥ãs B·¥ú·¥õ·¥õ·¥è…¥</i>
<i>- T ú…™s P·¥á Ä·¥ç·¥á·¥Ä…¥·¥õ L…™…¥·¥ã W…™·¥õ ú F·¥Äs·¥õ·¥ás·¥õ S·¥ò·¥á·¥á·¥Ö</i>\n
<u>üî∏ ùó™ùóîùó•ùó°ùóúùó°ùóö üö∏</u>\n
<b>üîû P Ä·¥è…¥ ·¥Ñ·¥è…¥·¥õ·¥á…¥·¥õÍú±  ü·¥á·¥Ä·¥ÖÍú± ·¥õ·¥è ·¥ò·¥á Ä·¥ç·¥Ä…¥·¥á…¥·¥õ  ô·¥Ä…¥  è·¥è·¥ú.</b>\n
<i>C·¥è…¥·¥õ·¥Ä·¥Ñ·¥õ ·¥Ö·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä (·¥è Ä)  Ä·¥á·¥ò·¥è Ä·¥õ  ô·¥ú…¢Íú±</i> <b>: <a href='https://t.me/PredatorHackerZ'>[ P Ä·¥á·¥Ö‚àÜ·¥õ·¥è Ä ]</a></b>"""

ABOUT_TEXT = """
<b>üíï M è …¥·¥Ä·¥ç·¥á : FileStreamX</b>\n
<b>üî∏V·¥á ÄÍú±…™·¥è…¥ : <a href='https://telegram.me/FileStreamDXBot'>3.0.1</a></b>\n
<b>üîπS·¥è·¥ú Ä·¥Ñ·¥á : <a href='https://github.com/PredatorHackerzZ/TG-File2Link'>C ü…™·¥Ñ·¥ã H·¥á Ä·¥á</a></b>\n
<b>üî∏GitHub : <a href='https://GitHub.com/PredatorHackerzZ'>F·¥è ü ü·¥è·¥°</a></b>\n
<b>üîπD·¥á·¥†·¥á ü·¥è·¥ò·¥á Ä : <a href='https://telegram.me/TheTeleRoid'>A·¥†…™s ú·¥ã·¥Ä Ä P·¥Ä·¥õ…™ ü</a></b>\n
<b>üî∏U·¥ò·¥Ö·¥Ä·¥õ·¥ás C ú·¥Ä…¥…¥·¥á ü : <a href='https://telegram.me/TeleRoidGroup'>[@TeleRoidGroup]</a></b>\n
<b>üî∏S·¥ú·¥ò·¥ò·¥è Ä·¥õ G Ä·¥è·¥ú·¥ò : <a href='https://telegram.me/TeleRoid14'>[@TeleRoid14]</a></b>\n
<b>üî∏L·¥ÄÍú±·¥õ ·¥ú·¥ò·¥Ö·¥Ä·¥õ·¥á·¥Ö : <a href='https://telegram.me/MoviesFlixers_DL'>[ 11-·¥ä·¥ú ü è-21 ] 04:35 PM</a></b>"""
